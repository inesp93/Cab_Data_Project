#extension of the DataGlacierWeek2_Final_cab_data.ipynb file and Hypothesis two

#Hypothesis three: Yellow Cab Company has a higher number of both, male and female users

newtable2.loc[(newtable2['Gender'] == 'Male') & (newtable2['Company'] == 'Pink Cab'), 'ManP'] = 'True'
newtable2.loc[(newtable2['Gender'] == 'Male') & (newtable2['Company'] == 'Yellow Cab'), 'ManY'] = 'True'
newtable2.loc[(newtable2['Gender'] == 'Female') & (newtable2['Company'] == 'Pink Cab'), 'WomanP'] = 'True'
newtable2.loc[(newtable2['Gender'] == 'Female') & (newtable2['Company'] == 'Yellow Cab'), 'WomanY'] = 'True'

woman = [newtable2['WomanP'].count(), newtable2['WomanY'].count()]
list_of_tuples = list(zip(Name, woman))
gend= pd.DataFrame(list_of_tuples, columns = ['Company', 'Number of female customers'])
print(gend)

mane = [newtable2['ManP'].count(), newtable2['ManY'].count()]
list_of_tuples = list(zip(Name, mane))
gende= pd.DataFrame(list_of_tuples, columns = ['Company', 'Number of male customers'])
print(gende)

gender = pd.merge(gend, gende,  how='left', on=['Company'])
print(gender)

gender.to_csv('hypothesisthree.csv', index = False, header=True)

#checking general data about customers

#male customers of the pink company, younger than 30
newtable2.loc[(newtable2['Gender'] == 'Male') & (newtable2['Company'] == 'Pink Cab') & (newtable2['Age'] < 30 ), 'ManPml30'] = 'True'
newtable2['ManPml30'].count()

#male customers of the yellow company, younger than 30
newtable2.loc[(newtable2['Gender'] == 'Male') & (newtable2['Company'] == 'Yellow Cab') & (newtable2['Age'] < 30 ), 'ManYml30'] = 'True'
newtable2['ManYml30'].count()

#making a DataFrame with a new data
man30 = [newtable2['ManPml30'].count(), newtable2['ManYml30'].count()]
list_of_tuples = list(zip(Name, man30))
mal30= pd.DataFrame(list_of_tuples, columns = ['Company', 'Male customers younger than 30'])

#merging a new DataFrame with the previos Gender table
m=gender.drop(columns='Number of female customers')
male30 = pd.merge(m, mal30,  how='left', on=['Company'])

#male customers of the pink company, older than 60
newtable2.loc[(newtable2['Gender'] == 'Male') & (newtable2['Company'] == 'Pink Cab') & (newtable2['Age'] > 60 ), 'ManPml60'] = 'True'
newtable2['ManPml60'].count()

#male customers of the yellow company, older than 60
newtable2.loc[(newtable2['Gender'] == 'Male') & (newtable2['Company'] == 'Yellow Cab') & (newtable2['Age'] > 60 ), 'ManYml60'] = 'True'
newtable2['ManYml60'].count()

#male customers of the pink company, between 30-60
ManPbetween= newtable2['Man'].count() - newtable2['ManPml30'].count() - newtable2['ManPml60'].count()

#male customers of the yellow company, between 30-60
ManPbetweenY= newtable2['ManYe'].count() - newtable2['ManYml30'].count() - newtable2['ManYml60'].count()

#making a DataFrame with a new data
manbetween = [ManPbetween, ManPbetweenY]
list_of_tuples = list(zip(Name, manbetween))
manbetween3060= pd.DataFrame(list_of_tuples, columns = ['Company', 'Male customers 30-60'])

#merging a new DataFrame with the previos table
male3060 = pd.merge(male30, manbetween3060, how='left', on=['Company'])

#making a DataFrame with a new data
man60 = [newtable2['ManPml60'].count(), newtable2['ManYml60'].count()]
list_of_tuples = list(zip(Name, man60))
mann60= pd.DataFrame(list_of_tuples, columns = ['Company', 'Male customers older than 60'])

#merging a new DataFrame with the previos table
malefinal = pd.merge(male3060, mann60, how='left', on=['Company'])

#saving a final table
malefinal.to_csv('MaleCustomers.csv', index = False, header=True)

#the same procedure with the female users

#female customers of the pink company, younger than 30
newtable2.loc[(newtable2['Gender'] == 'Female') & (newtable2['Company'] == 'Pink Cab') & (newtable2['Age'] < 30 ), 'FeP30'] = 'True'
newtable2['FeP30'].count()

#female customers of the yellow company, younger than 30
newtable2.loc[(newtable2['Gender'] == 'Female') & (newtable2['Company'] == 'Yellow Cab') & (newtable2['Age'] < 30 ), 'FeY30'] = 'True'
newtable2['FeY30'].count()

#making a DataFrame with a new data
fem30 = [newtable2['FeP30'].count(), newtable2['FeY30'].count()]
list_of_tuples = list(zip(Name, fem30))
fema30= pd.DataFrame(list_of_tuples, columns = ['Company', 'Female customers younger than 30'])

#merging a new DataFrame with the previos Gender table
f=gender.drop(columns='Number of male customers')
femal30 = pd.merge(f, fema30,  how='left', on=['Company'])

#female customers of the pink company, older than 60
newtable2.loc[(newtable2['Gender'] == 'Female') & (newtable2['Company'] == 'Pink Cab') & (newtable2['Age'] > 60 ), 'FeP60'] = 'True'
newtable2['FeP60'].count()

#female customers of the yellow company, older than 60
newtable2.loc[(newtable2['Gender'] == 'Female') & (newtable2['Company'] == 'Yellow Cab') & (newtable2['Age'] > 60 ), 'FeY60'] = 'True'
newtable2['FeY60'].count()
